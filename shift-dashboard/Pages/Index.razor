@page "/"
@using shift_dashboard.Services;
@using Blazorise.DataGrid;
@using Delegate = shift_dashboard.Model.Delegate;

@inject IApiService _apservice;

<Row>
    <Column>
        <Card Margin="Margin.Is4.OnY">
            <CardHeader>
                <CardTitle>Delegates</CardTitle>
            </CardHeader>
            <CardBody>
                <CardText>Show All Delegates registred</CardText>
            </CardBody>
            <CardBody>
                <DataGrid TItem="Delegate"
                          Striped="true"
                          Bordered="true"
                          Hoverable="true"
                          Responsive="true"
                          ShowPager="true"
                          PageSize="101"
                          PagerPosition="DataGridPagerPosition.TopAndBottom"
                          Data="@delegateList"
                          ReadData="@OnReadData">
                    <DataGridCommandColumn TItem="Delegate" />
                    <DataGridColumn TItem="Delegate" Field="@nameof(Delegate.Rank)" Caption="Rank" Editable="true" />
                    <DataGridColumn TItem="Delegate" Field="@nameof(Delegate.Username)" Caption="User Name" Editable="true" />
                    <DataGridColumn TItem="Delegate" Field="@nameof(Delegate.Address)" Caption="Address" Editable="true" />
                    <DataGridColumn TItem="Delegate" Field="@nameof(Delegate.Approval)" Caption="Approval" Editable="true" />
                    <DataGridColumn TItem="Delegate" Field="@nameof(Delegate.Vote)" Caption="Vote" Editable="true" />
                </DataGrid>
            </CardBody>
        </Card>
    </Column>
</Row>

@code {

    Delegate[] delegateList;
    int totalDelegate;

    async Task OnReadData(DataGridReadDataEventArgs<Delegate> e)
    {
        // this can be call to anything, in this case we're calling a fictional api
        delegateList = _apservice.GetDelegatesFromDb();

        totalDelegate = delegateList.Count()/100; // this is used to tell datagrid how many items are available so that pagination will work

        // always call StateHasChanged!
        StateHasChanged();
    }

}
